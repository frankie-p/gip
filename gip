#!/bin/bash

# gip - git based backup system

VERSION=1.0.0
eval CONFIG_PATH="~/.config/gip/gip"

source_config() {
	if [[ ! -f "$CONFIG_PATH" ]] ; then
        	echo "config file not found, call --def-config to create default configuration"
        	exit
	fi

	source "$CONFIG_PATH"
}

ensure_tmp() {
	if [[ ! -d "$TMP_DIR/.git" ]] ; then
		mkdir -p "$TMP_DIR"
		git clone $GIT_URL "$TMP_DIR"
	fi
}

list() {
	for file in "${FILES[@]}" ; do
                echo "$file"
        done
}

check_files() {
	for file in "${FILES[@]}" ; do
                if [[ ! -f "$file" ]] ; then
			echo "file $file not found"
		     	 exit
                fi
	done
}

update() {
	check_files

	for file in "${FILES[@]}" ; do
		echo  "$file => $TMP_DIR/${file#/}"

		mkdir -p "$(dirname "$TMP_DIR/${file#/}")"
		cp "$file" "$TMP_DIR/${file#/}"
	done
}

commit() {
	pushd "$TMP_DIR"
	git add .
	git commit -am "gip commit"
	popd
}

push() {
	pushd "$TMP_DIR"
	git push
	popd
}

status() {
	source_config

	pushd "$TMP_DIR"
	git status
	popd
}

def_config() {
	if [[ -f "$CONFIG_PATH" ]] ; then
		echo "config file exists"
		exit
	fi

	mkdir -p "$(dirname "$CONFIG_PATH")"

	echo "# gip - git based backup system" >> "$CONFIG_PATH"
	echo "" >> "$CONFIG_PATH"
	echo "# tmp directory which is used to checkout the git project" >> "$CONFIG_PATH"
	echo "TMP_DIR=/tmp/gip" >> "$CONFIG_PATH"
	echo "" >> "$CONFIG_PATH"
	echo "# url of the git project" >> "$CONFIG_PATH"
	echo "GIT_URL=<put git url here>" >> "$CONFIG_PATH"
	echo "" >> "$CONFIG_PATH"
	echo "# list of files to be backuped" >> "$CONFIG_PATH"
	echo "FILES=(\"/path/file/1\" \"/path/file/2\")" >> "$CONFIG_PATH"

	echo "config file created, please edit $CONFIG_PATH"
}

usage() {
	echo "Usage: gib [OPTIONS]"
	echo ""
	echo "Options:"
	echo -e "\t--list-files    List configured files"
	echo -e "\t--check-files   Check if configured files exists"
	echo -e "\t--status        Show status"
	echo -e "\t--update        Check and update files (copies configured files to the tmp dir)"
	echo -e "\t--commit        Create local commit"
	echo -e "\t--push          Push commits to git"
	echo -e "\t--full          Same as '--update --commit --push'"
	echo -e "\t--def-config    Create default config"
	echo -e "\t--help          Print help"
	echo -e "\t--version       Print version"
}

for i in "$@" ; do
	case $i in
		--version|-V)
			echo "$VERSION"
			exit
			;;
		--list-files|-l)
			do_list=true
			shift
			;;
		--check-files)
			do_check=true
			shift
			;;
		--status)
			status
			shift
			;;
		--update)
			do_update=true
			shift
			;;
		--commit|-c)
			do_commit=true
			shift
			;;
		--push)
			do_push=true
			shift
			;;
		--full)
			do_update=true
			do_commit=true
			shift
			;;
		--def-config)
			def_config
			exit
			;;
		*)
			usage
			exit
			;;
	esac
done

source_config
ensure_tmp

if [[ ! -z "$do_list" ]] ; then
	list
fi

if [[ ! -z "$do_check" ]] ; then
	check_files
fi

if [[ ! -z "$do_update" ]] ; then
	update
fi

if [[ ! -z "$do_commit" ]] ; then
	commit
fi

if [[ ! -z "$do_push" ]] ; then
	push
fi
