#!/bin/bash

# gip - git based backup system

VERSION=1.0.0
eval CONFIG_PATH="~/.config/gip"

source_config() {
	if [[ ! -f "$CONFIG_PATH" ]] ; then
        	echo "config file not found, call --def-config to create default configuration"
        	exit
	fi

	source "$CONFIG_PATH"
}

ensure_tmp() {
	if [[ ! -d "$TMP_DIR/.git" ]] ; then
		mkdir -p "$TMP_DIR"
		git clone $GIT_URL "$TMP_DIR"
	fi
}

copy_tmp() {
	# check files before start copy

	for file in "${FILES[@]}" ; do
                if [[ ! -f "$file" ]] ; then
			echo "file $file not found"
		     	 exit
                fi
	done

	# start copy routine

	for file in "${FILES[@]}" ; do
		echo  "$file => $TMP_DIR/${file#/}"

		mkdir -p "$(dirname "$TMP_DIR/${file#/}")"
		cp "$file" "$TMP_DIR/${file#/}"
	done
}

commit() {
	pusdh "$TMP_DIR"

	# add new files
	git add .

	git commit -am "gip commit"

	git push

	popd
}

def_config() {
	if [[ -f "$CONFIG_PATH" ]] ; then
		echo "config file exists"
		exit
	fi

	echo "# gip - git based backup system" >> "$CONFIG_PATH"
	echo "" >> "$CONFIG_PATH"
	echo "# tmp directory which is used to checkout the git project" >> "$CONFIG_PATH"
	echo "TMP_DIR=/tmp/gib" >> "$CONFIG_PATH"
	echo "" >> "$CONFIG_PATH"
	echo "# url of the git project" >> "$CONFIG_PATH"
	echo "GIT_URL=<put git url here>" >> "$CONFIG_PATH"
	echo "" >> "$CONFIG_PATH"
	echo "# list of files to be backuped" >> "$CONFIG_PATH"
	echo "FILES=(\"/path/file/1\" \"/path/file/2\")" >> "$CONFIG_PATH"

	echo "config file created, please edit $CONFIG_PATH"
}

update() {
	source_config
	ensure_tmp
	commit
}

usage() {
	echo "Usage: gib [COMMAND] [OPTIONS]"
	echo ""
	echo "Commands:"
	echo -e "\tupdate"
	echo ""
	echo "Options:"
	echo -e "\t--def-config    Create default config"
	echo -e "\t--help          Print help"
	echo -e "\t--version       Print version"
}

for i in "$@" ; do
	case $i in
		--version|-V)
			echo "$VERSION"
			shift
			;;
		update)
			do_update=true
			shift
			;;
		--def-config)
			do_def_config=true
			shift
			;;
		*)
			usage
			shift
			;;
	esac
done

if [[ ! -z "$do_def_config" ]] ; then
	def_config
elif [[ ! -z "$do_update" ]] ; then
	update
	commit
fi


